<?php

namespace backend\models;

use common\components\CommonFunction;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "{{%user_check}}".
 *
 * @property string $id
 * @property string $user_id
 * @property string $book_id
 * @property string $detail_id
 * @property string $time
 * @property string $status
 * @property string $type
 * @property string $relation_id
 * @property string $image
 * @property string $file
 * @property string $content
 * @property string $check_time
 */
class UserCheck extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%user_check}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'book_id', 'detail_id', 'time', 'status', 'type', 'relation_id', 'check_time'], 'integer'],
            [['image', 'content'], 'string', 'max' => 1000],
            [['file'], 'string', 'max' => 255],
        ];
    }

    public static $status_message=[
        1=>'未读',
        2=>'已读'
    ];

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => '用户',
            'book_id' => '书籍',
            'detail_id' => '章节',
            'time' => '时间',
            'status' => '状态',
            'type' => '类型',
            'relation_id' => '小组/团队',
            'image' => '图片',
            'file' => '文件',
            'content' => '内容',
            'check_time' => '签到时间',
        ];
    }
    public function beforeSave($insert)
    {

        if($this->image){
            $this->image=CommonFunction::unsetImg($this->image);
        }
        if($this->file){
            $this->file=CommonFunction::unsetImg($this->file);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getUser(){
        return $this->hasOne(User::class,['id'=>'user_id']);
    }

    public function getBook(){
        return $this->hasOne(Book::class,['id'=>'book_id']);
    }
    public function getDetail(){
        return $this->hasOne(BookDetail::class,['id'=>'detail_id']);
    }

    public function getTeam(){
        return $this->hasOne(Team::class,['id'=>'relation_id']);
    }


}
