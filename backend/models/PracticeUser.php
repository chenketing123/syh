<?php

namespace backend\models;

use common\components\CommonFunction;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "{{%practice_user}}".
 *
 * @property string $id
 * @property string $practice_id
 * @property string $user_id
 * @property string $file
 * @property string $image
 * @property string $content
 * @property string $created_at
 * @property string $updated_at
 */
class PracticeUser extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%practice_user}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['practice_id', 'user_id', 'created_at', 'updated_at'], 'integer'],
            [['file', 'content'], 'string', 'max' => 255],
            [['image'], 'string', 'max' => 1000],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'practice_id' => '专区',
            'user_id' => '用户',
            'file' => '上传文件',
            'image' => '图片',
            'content' => '内容',
            'created_at' => '添加时间',
            'updated_at' => 'Updated At',
        ];
    }

    /**
    * @return array
    */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at'],
                ],
            ],
        ];
    }


    public function beforeSave($insert)
    {

        if($this->file){
            $this->file=CommonFunction::unsetImg($this->file);
        }
        if($this->image){
            $arr_value=[];
            $arr=explode(',',$this->image);
            foreach ($arr as $k=>$v){
                $arr_value[]=CommonFunction::unsetImg($v);
            }
            $this->image=implode(',',$arr_value);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getUser(){
        return $this->hasOne(User::class,['id'=>'user_id']);
    }
    public function getPractice(){
        return $this->hasOne(Practice::class,['id'=>'practice_id']);
    }
}
