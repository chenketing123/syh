<?php

namespace backend\models;

use common\components\CommonFunction;
use common\components\Helper;
use common\components\Weixin;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "{{%activity}}".
 *
 * @property string $id
 * @property string $title
 * @property string $start_time
 * @property string $end_time
 * @property string $address
 * @property string $price
 * @property string $number
 * @property string $content
 * @property string $info
 * @property integer $sort
 * @property string $created_at
 * @property string $updated_at
 * @property string $status
 */
class Activity extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%activity}}';
    }


    public static $status_message=[
        1=>'进行中',
        2=>'已结束',
        3=>'未开始'
    ];

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [[ 'number', 'sort', 'status','is_index'], 'integer'],
            [['price'], 'number'],
            [['content', 'info'], 'string'],
            [['title'], 'string', 'max' => 100],
            [['address','image'], 'string', 'max' => 255],
            [['start_time','end_time','wx_image','type','path','appid'],'safe']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => '标题',
            'start_time' => '开始时间',
            'end_time' => '结束时间',
            'address' => '地址',
            'price' => '价格',
            'number' => '人数',
            'content' => '内容',
            'info' => '简介',
            'sort' => '排序',
            'image'=>'图片',
            'created_at' => '添加时间',
            'updated_at' => '修改时间',
            'status' => '状态',
            'is_index'=>'首页推荐',
            'wx_image'=>'签到二维码',
            'type'=>'类型',
            'appid'=>'小程序appid',
            'path'=>'路径'
        ];
    }

    /**
    * @return array
    */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at'],
                ],
            ],
        ];
    }


    //活动报名
    public static function add_user($user_id,$activity_id){

    }


    public static function getList()
    {
        $model = self::find()->orderBy('sort asc,id desc')->asArray()->all();
        return ArrayHelper::map($model, 'id', 'title');
    }



    public function beforeSave($insert)
    {

        if($this->image){
            $this->image=CommonFunction::unsetImg($this->image);
        }
        if($this->content){
            $this->content=CommonFunction::unsetImg($this->content);
        }
        if(!is_numeric($this->start_time)){
            $this->start_time=strtotime($this->start_time);
        }
        if(!is_numeric($this->end_time)){
            $this->end_time=strtotime($this->end_time);
        }


        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    //保存后事件
    public function afterSave($insert, $changedAttributes)
    {
        //$changedAttributes  要改变的字段，未改变的值
        //$this->字段名  改变保存的值
        parent::afterSave($insert, $changedAttributes);

        if ($insert) {
            //新增处理
            $access_token=Weixin::Token();
            $path='home/homework/actSign?id='.$this->id;
            $param=[
                'path'=>$path,
            ];

            $url="https://api.weixin.qq.com/wxa/getwxacode?access_token=$access_token";
            $re=Helper::curl($param,$url,2);

            $type = 'jpg';
            $folders=date('Ymd', time()) ;
            $new_file = \Yii::getAlias("@attachment") . "/" . $folders . "/";
            if (!file_exists($new_file)) {
                //检查是否有该文件夹，如果没有就创建，并给予最高权限
                mkdir($new_file, 0700);
            }
            $name=time() . Helper::random(5). ".{$type}";
            $new_file = $new_file . $name;
            file_put_contents($new_file, $re,true);
            $url=\Yii::getAlias("@attachurl") .'/'.$folders.'/'.$name;;
            Activity::updateAll(['wx_image'=>$url],['id'=>$this->id]);
        }
    }

}
