<?php

namespace backend\models;

use common\components\CommonFunction;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "{{%order}}".
 *
 * @property integer $id
 * @property integer $type
 * @property string $order_number
 * @property integer $user_id
 * @property string $phone
 * @property string $address
 * @property integer $express
 * @property double $total_price
 * @property integer $status
 * @property string $content
 * @property string $created_at
 * @property integer $updated_at
 * @property string $express_number
 * @property string $province
 * @property string $city
 * @property string $area
 * @property string $image
 * @property string $contact
 */
class Order extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%order}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['type', 'user_id', 'status'], 'integer'],
            [['total_price'], 'number'],
            [['content'], 'string'],
            [['order_number', 'phone', 'contact'], 'string', 'max' => 50],
            [['address', 'express_number', 'province', 'city', 'area', 'image','douyin','express'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'type' => '类型',
            'order_number' => '订单号',
            'user_id' => '用户',
            'phone' => '电话',
            'address' => '详情地址',
            'express' => '快递方式',
            'total_price' => '所需积分',
            'status' => '状态',
            'content' => '备注',
            'created_at' => '添加时间',
            'express_number' => '快递单号',
            'province' => '省',
            'city' => '市',
            'area' => '区',
            'image' => '关注图片',
            'contact' => '收货人',
            'douyin'=>'抖音号',
            'goods_title'=>'产品名称',
            'goods_image'=>'产品图片'
        ];
    }

    /**
    * @return array
    */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at'],
                ],
            ],
        ];
    }


    public function beforeSave($insert)
    {

        if($this->image){
            $this->image=CommonFunction::unsetImg($this->image);
        }
        if ($this->isNewRecord) {

            $this->order_number = date('YmdHis', time()) . $this->user_id;


        }
        if($this->province_id){
            $province=Provinces::findOne($this->province_id);
            $this->province=$province['areaname'];
        }
        if($this->city_id){
            $city=Provinces::findOne($this->city_id);
            $this->city=$city['areaname'];
        }
        if($this->area_id){
            $area=Provinces::findOne($this->area_id);
            $this->area=$area['areaname'];
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }




    public static function buy($message,$user_id){
        $re=[
            'error'=>0,
            'message'=>''
        ];
        $user=User::findOne($user_id);
        $goods=Goods::findOne($message['id']);
        $address=Address::findOne($message['address_id']);


        if(!$goods){
            $re['error']=1;
            $re['message']='商品不存在';
            return $re;
        }
        if($goods->number<=0){
            $re['error']=1;
            $re['message']='库存不足';
            return $re;
        }

        if(!$address){
            $re['error']=1;
            $re['message']='地址不存在';
            return $re;

        }
        if($user->integral<$goods->price){
            $re['error']=1;
            $re['message']='积分不足';
            return $re;
        }else{
            $order=new Order();
            if($user->type==1){
                //未关注
                if(!isset($message['title'])){
                    $re['error']=1;
                    $re['message']='请填写抖音号';
                    return $re;
                }
                if(!isset($message['image'])){
                    $re['error']=1;
                    $re['message']='请上传截图';
                    return $re;
                }
            }
            $order->user_id=$user->id;
            $order->douyin=$message['title'];
            $order->image=$message['image'];
            $order->contact=$address->contact;
            $order->phone=$address->phone;
            $order->province=$address->province;
            $order->city=$address->city;
            $order->area=$address->area;
            $order->address=$address->content;
            $order->total_price=$goods->price;
            $order->goods_id=$goods->id;
            $order->goods_image=$goods->image;
            $order->goods_title=$goods->title;
            $order->province_id = $address->province_id;
            $order->city_id = $address->city_id;
            $order->area_id = $address->area_id;
            if($order->save()){
                $user->integral-=$goods->price;
                $user->save();
                $log=new IntLog();
                $log->user_id=$user->id;
                $log->content='兑换';
                $log->number=-$order->total_price;
                $log->type=3;
                $log->save();
                $re['id']=$order['id'];
                $goods->number--;
                $goods->save();
            }else{
                $re['error']=1;
                $error=$order->getFirstErrors();
                $re['message']=reset($error);
            }
        }
        return $re;
    }
}
